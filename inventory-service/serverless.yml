
service: inventory-service


provider:
  name: aws
  runtime: nodejs12.x
  iamRoleStatements:
        - Effect: "Allow"
          Action:
            - cloudformation: CreateStack
            - cloudformation: DescribeStacks
            - cloudformation: CreateChangeSet
            - cloudformation: ListStacks
            - cloudformation: UpdateStack
            - cloudformation: DescribeChangeSet
            - cloudformation: ExecuteChangeSet
            - iam: GetRole
            - lambda: UpdateFunctionCode
            - lambda: UpdateFunctionConfig
            - lambda: GetFunctionConfiguration
            - lambda: AddPermission
            - s3: GetObject
          Resource: "*"


functions:
  createWarehouse:
    handler: handlers/warehouse-handler.newWarehouse
    events:
      - http:
          path: warehouse
          method: post
  updateWarehouse:
    handler: handlers/warehouse-handler.updateWarehouse
    events:
      - http:
          path: warehouse
          method: put

  addStock:
    handler: handlers/stock-handler.addStock
    events:
      - http:
          path: stock/add
          method: post
  moveStock:
    handler: handlers/stock-handler.moveStock
    events:
      - http:
          path: stock/move
          method: put

  invoiceHandler:
    handler: handlers/stock-handler.invoiceHandler
    name: stocks-new-invoice-handler


  invoiceRestoreHandler:
    handler: handlers/stock-handler.invoiceRestoreHandler
    name: stocks-invoice-restore-handler



custom:
  serverless-offline:
    httpPort: 5000
    lambdaPort: 5001
  serverless-offline-sns:
    port: 5002
    debug: true


plugins:
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-offline-sns